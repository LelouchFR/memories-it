$P100: 100%;
$P50: 50%;
$ROTATION-180: 180deg;

@mixin Grid-Displayer($gtc, $gtr, $gcp, $grp) {
    grid-template-columns: $gtc;
    grid-template-rows: $gtr;
    grid-column-gap: $gcp;
    grid-row-gap: $grp;
}

body {background-color: #9E643C}

.container {
    display: grid;
    @include Grid-Displayer(repeat(3, 1fr), repeat(2, 1fr), 0px, 20px);
    position: relative;
    top: $P50;
    left: $P50;
    transform: translate(-$P50);

    $grid-rows: 1 2 3 4;
    $grid-cols: 1 2 3;

    @each $row in $grid-rows {
        @each $col in $grid-cols {
            $card: ".card#{$row}#{$col}";
            #{$card} {
                grid-area: #{$row} / #{$col} / #{($row + 1)} / #{($col + 1)};
            }
        }
    }

    .card {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 200px;
        height: 250px;
        border-radius: 5px;
        padding: 20px;
        position: relative;
        left: $P50;
        transform: translate(-$P50);
        transition: transform .5s ease-in-out;
        cursor: pointer;
    
        &.flipped {
            transform: rotateY(-$ROTATION-180);
            transform: translate(-$P50);
        }
    
        &.back {
            position: absolute;
            top: 0;
            left: 0;
            width: $P100;
            height: $P100;
            backface-visibility: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            transform: rotateY($ROTATION-180);
        }
    
        .back img {
            width: $P100;
            height: $P100;
        }
    
        .front, .back {
            position: absolute;
            top: 0;
            left: 0;
            width: $P100;
            height: $P100;
            transition: transform .6s;
            backface-visibility: hidden;
        }
    
        .front {transform: rotateY(0deg)}
        .back {transform: rotateY($ROTATION-180)}
        &.flipped .front {transform: rotateY(-$ROTATION-180)}
        &.flipped .back {transform: rotateY(0deg)}
        
        img {
            width: $P100;
            height: $P100;
            object-fit: cover;
            border-radius: 5px;
        }
    }
}

@media (max-width: 750px) {
    .container {
        display: grid;
        @include Grid-Displayer(repeat(2, 1fr), repeat(5, 1fr), 20px, 20px);

        $grid: ((1, 1, 2, 2), (1, 2, 2, 3), (2, 1, 3, 2), (2, 2, 3, 3), (3, 1, 4, 2), (3, 2, 4, 3), (4, 1, 5, 2), (4, 2, 5, 3), (5, 1, 6, 2), (5, 2, 6, 3), (6, 1, 7, 2), (6, 2, 7, 3));

        @each $row in $grid {
            $class: ".card#{index($grid, $row)}";
            #{$class} {
                grid-area: nth($row, 1) / nth($row, 2) / nth($row, 3) / nth($row, 4);
            }
        }

        .card {transform: translate(-30%)}
    }

}