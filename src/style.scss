@import './styles/mixin.module.scss';
@import './styles/const.module.scss';

body {background-color: #9E643C}

.container {
    display: grid;
    position: relative;
    @include Grid-Displayer(repeat(3, 1fr), repeat(2, 1fr), 0px, 20px);
    @include top-left($P50, $P50);
    transform: translate(-$P50);

    @each $row in $grid-rows {
        @each $col in $grid-cols {
            $card: ".card#{$row}#{$col}";
            #{$card} {
                grid-area: #{$row} / #{$col} / #{($row + 1)} / #{($col + 1)};
            }
        }
    }

    .card {
        display: flex;
        position: relative;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        left: $P50;
        @include width-height(200px, 250px);
        transform: translate(-$P50);
        border-radius: 5px;
        padding: 20px;
        transition: transform .5s ease-in-out;
        cursor: pointer;
    
        &.flipped {
            transform: rotateY(-$ROTATION-180);
            transform: translate(-$P50);
        }
    
        &.back {
            display: flex;
            position: absolute;
            align-items: center;
            justify-content: center;
            @include top-left(0, 0);
            @include width-height($P100, $P100);
            transform: rotateY($ROTATION-180);
            backface-visibility: hidden;
        }
    
        .back img {@include width-height($P100, $P100)}
    
        .front, .back {
            position: absolute;
            @include top-left(0, 0);
            @include width-height($P100, $P100);
            backface-visibility: hidden;
            transition: transform .6s;
        }
    
        .front {transform: rotateY(0deg)}
        .back {transform: rotateY($ROTATION-180)}
        &.flipped .front {transform: rotateY(-$ROTATION-180)}
        &.flipped .back {transform: rotateY(0deg)}
        
        img {
            @include width-height($P100, $P100);
            object-fit: cover;
            border-radius: 5px;
        }

    }
    
}

@media (max-width: 750px) {
    .container {
        @include Grid-Displayer(repeat(2, 1fr), repeat(5, 1fr), 20px, 20px);

        @for $i from 1 through length($grid-rows) {
            $row: nth($grid-rows, $i);

            @for $j from 1 through length($grid-cols) {
                $col: nth($grid-cols, $j);
                $card: ".card#{$row}#{$col}";

                #{$card} {grid-area: #{$row} / #{$col} / #{($row + 1)} / #{($col + 1)}}
            }

        }

        .card {transform: translate(-30%)}
    }

}